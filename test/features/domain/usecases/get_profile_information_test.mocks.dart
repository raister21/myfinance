// Mocks generated by Mockito 5.0.17 from annotations
// in myfinance/test/features/domain/usecases/get_profile_information_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:myfinance/features/registration/domain/entities/profile.dart'
    as _i2;
import 'package:myfinance/features/registration/domain/repositories/profile_repository.dart'
    as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeProfile_0 extends _i1.Fake implements _i2.Profile {}

/// A class which mocks [ProfileRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileRepository extends _i1.Mock implements _i3.ProfileRepository {
  MockProfileRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Profile> getProfileInformation() =>
      (super.noSuchMethod(Invocation.method(#getProfileInformation, []),
              returnValue: Future<_i2.Profile>.value(_FakeProfile_0()))
          as _i4.Future<_i2.Profile>);
  @override
  _i4.Future<bool> setProfileInformation({_i2.Profile? profile}) =>
      (super.noSuchMethod(
          Invocation.method(#setProfileInformation, [], {#profile: profile}),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  void initializeApplication() =>
      super.noSuchMethod(Invocation.method(#initializeApplication, []),
          returnValueForMissingStub: null);
}
